{"version":3,"file":"static/js/244.7b562cbc.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieListItem/MovieListItem.styled.jsx","components/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/PageTitle/PageTitle.styled.jsx","components/PageTitle/PageTitle.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","services/API.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Spiner = styled.div`\n  width: 162px;\n  margin: 0 auto;\n  padding: 50px 0;\n`;\n","import { FadeLoader } from \"react-spinners\";\n\nimport { Spiner } from \"./Loader.styled\";\n\nexport const Loader=()=> {\n  return (\n    <Spiner>\n      <FadeLoader color=\"#6317a1\" size=\"50px\" />\n    </Spiner>\n  );\n}\n","import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const Item = styled.li`\n  display: flex;\n  width: 235px;\n  border-radius: 5px;\n  overflow: hidden;\n  transition: box-shadow 300ms ease-in-out;\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n\n  :hover {\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 14px 28px,\n      rgba(0, 0, 0, 0.22) 0px 10px 10px;\n  }\n\n  @media screen and (max-width: 768px) {\n    margin: 0 auto;\n  }\n`;\n\nexport const Title = styled.h2`\n  padding: 6px;\n  margin: 0;\n  color: #0f0f0f;\n  font-weight: 500;\n  font-size: 16px;\n  text-align: center;\n  :hover {\n    color: #f30;\n    cursor: pointer;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\nexport const InfoMain = styled.div`\n  height: 100px;\n\n  display: flex;\n  flex-direction: column;\n\n  justify-content: space-between;\n  padding: 6px 10px;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ReleaseDate = styled.p`\n  font-size: 12px;\n  // margin-bottom: 5px;\n  color: #214e50;\n`;\n\nexport const VoteAverage = styled.p`\n  font-size: 12px;\n  // margin-bottom: 5px;\n  color: #214e50;\n`;\n","import PropTypes from \"prop-types\";\nimport { useLocation } from \"react-router-dom\";\nimport previewPlaceholder from \"../../images/preview-placeholder.png\";\n\nimport {\n  Item,\n  Title,\n  MovieLink,\n  InfoMain,\n  Info,\n  ReleaseDate,\n  VoteAverage,\n} from \"./MovieListItem.styled\";\n\nexport const MovieListItem = ({\n  title,\n  poster,\n  id,\n  release_date,\n  vote_average,\n}) => {\n  const location = useLocation();\n  const imgBaseUrl = \"https://image.tmdb.org/t/p/w342/\";\n\n  return (\n    <Item>\n      <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n        {poster ? (\n          <img src={`${imgBaseUrl}${poster}`} alt={title} />\n        ) : (\n          <img src={`${previewPlaceholder}`} alt={title} />\n        )}\n\n        <InfoMain>\n          <Title>{title}</Title>\n          <Info>\n            <ReleaseDate>Рік {release_date?.slice(0, 4)}</ReleaseDate>\n            <VoteAverage>Рейтинг {vote_average}</VoteAverage>\n          </Info>\n        </InfoMain>\n      </MovieLink>\n    </Item>\n  );\n};\n\nMovieListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  poster: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n  \n`;","import PropTypes from \"prop-types\";\nimport { MovieListItem } from \"../MovieListItem/MovieListItem\";\nimport { List } from \"./MovieList.styled\";\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map((movie) => (\n        <MovieListItem\n          key={movie.id}\n          id={movie.id}\n          title={movie.title}\n          poster={movie.poster_path}\n          release_date={movie.release_date}\n          vote_average={movie.vote_average}\n        ></MovieListItem>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h1`\n  font-size: 36px;\n  margin-bottom: 40px;\n  text-align: center;\n`;\n","import PropTypes from \"prop-types\";\nimport { Title } from \"./PageTitle.styled\";\n\nexport const PageTitle = ({ title }) => {\n  return <Title>{title}</Title>;\n};\nPageTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  position: relative;\n  text-align: center;\n  width: 340px;\n  margin: 0 auto 24px;\n`;\n\nexport const Input = styled.input`\n  height: 36px;\n  width: 100%;\n  padding: 5px 10px;\n}\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 2px;\n  right: 0;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\nexport const Alert = styled.span`\n  position: absolute;\n  width: 100%;\n  left: 0;\n  top: 40px;\n  color: #f60;\n`;","import PropTypes from 'prop-types';\nimport { useFormik } from 'formik';\nimport { HiOutlineSearchCircle } from 'react-icons/hi';\n\nimport { Form, Input, Button, Alert } from './SearchForm.styled';\n\nconst validate = values => {\n    const errors = {};\n    if (!values.search) {\n        errors.search = 'Будь ласка, введіть пошуковий запит';\n    } else if (values.search.length > 30) {\n        errors.search = 'Має бути 30 символів або менше';\n    }\n\n    return errors;\n};\n\nexport const SearchForm=({ onSubmit, value })=> {\n    const formik = useFormik({\n        initialValues: {\n            search: value,\n        },\n        validate,\n        onSubmit: values => {\n            if (values.search === '') return;\n            onSubmit(values.search);\n        },\n    });\n\n    return (\n        <Form onSubmit={formik.handleSubmit}>\n            <Input\n                name=\"search\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                value={formik.values.search}\n                placeholder=\"Пошук\"\n            />\n            {formik.errors.search ? <Alert>{formik.errors.search}</Alert> : null}\n            <Button type=\"submit\">\n                <HiOutlineSearchCircle size=\"30px\" color=\"#18272fbb\" />\n            </Button>\n        </Form>\n    );\n}\n\nSearchForm.propTypes = {\n    value: PropTypes.string.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n};","import { useState, useEffect, useCallback } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\nimport API from \"../services/API\";\nimport { SearchForm } from \"../components/SearchForm/SearchForm\";\nimport { MovieList } from \"../components/MovieList/MovieList\";\nimport { PageTitle } from \"../components/PageTitle/PageTitle\";\nimport { Loader } from \"../components/Loader/Loader\";\n\nexport const Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState(null);\n  const search = searchParams.get(\"q\") ?? \"\";\n  const isLoaded = movies !== null;\n\n  const handleSubmit = (query) => {\n    setSearchParams({ q: query.trim().toLowerCase() });\n  };\n\n  const hadleFetchSearch = useCallback(async () => {\n    if (search !== \"\") {\n      try {\n        const response = await API.search(search);\n        setMovies(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [search]);\n\n  useEffect(() => {\n    hadleFetchSearch();\n  }, [hadleFetchSearch]);\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit} value={search}></SearchForm>\n      {search &&\n        ((!isLoaded && <Loader />) ||\n          (isLoaded && (\n            <>\n              <PageTitle title={`Результати пошуку для \"${search}\"`} />\n              <MovieList movies={movies}></MovieList>\n            </>\n          )))}\n    </>\n  );\n};\nexport default Movies;","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"82d7358e08c3385257d89a8036361557\";\n\nconst popular = async () => {\n  const response = await axios.get(\"/trending/movie/week\", {\n    params: {\n      api_key: API_KEY,\n      language: \"uk\",\n    },\n  });\n  return response.data.results;\n};\n\nconst search = async (query) => {\n  const response = await axios.get(\"/search/movie\", {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  });\n  return response.data.results;\n};\n\nconst details = async (id) => {\n  const response = await axios.get(\"/movie/\" + id, {\n    params: {\n      api_key: API_KEY,\n      language: \"uk\",\n    },\n  });\n  return response.data;\n};\n\nconst cast = async (id) => {\n  const response = await axios.get(\"/movie/\" + id + \"/credits\", {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nconst reviews = async (id) => {\n  const response = await axios.get(\"/movie/\" + id + \"/reviews\", {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nconst API = {\n  popular,\n  search,\n  details,\n  cast,\n  reviews,\n};\n\nexport default API;\n"],"names":["Spiner","styled","Loader","FadeLoader","color","size","Item","Title","MovieLink","Link","InfoMain","Info","ReleaseDate","VoteAverage","MovieListItem","title","poster","id","release_date","vote_average","location","useLocation","to","state","from","src","alt","slice","List","MovieList","movies","map","movie","poster_path","PageTitle","Form","Input","Button","Alert","validate","values","errors","search","length","SearchForm","onSubmit","value","formik","useFormik","initialValues","handleSubmit","name","type","onChange","handleChange","placeholder","Movies","useSearchParams","searchParams","setSearchParams","useState","setMovies","get","isLoaded","hadleFetchSearch","useCallback","API","response","console","log","useEffect","query","q","trim","toLowerCase","axios","API_KEY","popular","params","api_key","language","data","results","details","cast","reviews"],"sourceRoot":""}