{"version":3,"file":"static/js/695.a2b39a3d.chunk.js","mappings":"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","sources":["pages/MovieDetails.styled.jsx","pages/MovieDetails.jsx","services/API.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const MainWrapper = styled.div`\n  display: flex;\n  gap: 40px;\n  border-bottom: 2px solid whitesmoke;\n  padding: 20px;\n\n  @media screen and (max-width: 768px) {\n    display: block;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  padding-top: 20px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 36px;\n`;\nexport const SubTitle = styled.h3`\n  font-size: 16px;\n`;\nexport const Text = styled.p`\n  margin: 0;\n  opacity: 0.9;\n`;\nexport const Button = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  text-decoration: none;\n  color: #18272f;\n  border: 1px solid #18272f;\n  border-radius: 5px;\n  padding: 2px 8px;\n\n  :hover {\n    color: #f60;\n  }\n\n  &.active:after {\n    background-color: #f60;\n`;\n","import { useState, useCallback, useEffect, Suspense } from \"react\";\nimport { Outlet, useParams, useLocation } from \"react-router-dom\";\nimport { MdKeyboardBackspace } from \"react-icons/md\";\n\nimport API from \"../services/API\";\nimport {\n  MainWrapper,\n  ButtonWrapper,\n  Title,\n  SubTitle,\n  Text,\n  Button,\n} from \"./MovieDetails.styled\";\nimport { Fallback } from \"components/Fallback/Fallback.styled\";\nimport detailsplaceholder from \"../images/details-placeholder.jpg\";\n\nexport const MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? \"/\";\n  const [movie, setMovie] = useState(null);\n\n  const hadleFetchDetails = useCallback(async () => {\n    const response = await API.details(movieId);\n\n    setMovie(response);\n  }, [movieId, setMovie]);\n\n  const imgBaseUrl = \"https://image.tmdb.org/t/p/w300/\";\n\n  useEffect(() => {\n    hadleFetchDetails();\n  }, [hadleFetchDetails]);\n  return (\n    <>\n      <Button to={backLinkHref}>\n        <MdKeyboardBackspace size=\"20px\" />\n        Назад\n      </Button>\n      {!movie && <Title>Завантаження</Title>}\n      {movie && (\n        <>\n          <MainWrapper>\n            {movie.poster_path ? (\n              <img\n                src={`${imgBaseUrl}${movie.poster_path}`}\n                alt={movie.title}\n              />\n            ) : (\n              <img src={`${detailsplaceholder}`} alt={movie.title} />\n            )}\n\n            <div>\n              <Title>{`${movie.title} (${movie.release_date?.slice(\n                0,\n                4\n              )})`}</Title>\n              <SubTitle>{movie.tagline}</SubTitle>\n              <Text>{`Рейтинг користувачів: ${\n                movie.vote_average !== 0.0\n                  ? `${Math.floor(movie.vote_average * 10)}%`\n                  : \"no ratings yet\"\n              }`}</Text>\n              <SubTitle>ОПИС</SubTitle>\n              <Text>{movie.overview}</Text>\n              <SubTitle>ЖАНРИ</SubTitle>\n              <Text>{movie.genres.map((genre) => genre.name).join(\", \")}</Text>\n            </div>\n          </MainWrapper>\n          <ButtonWrapper>\n            <Button to=\"cast\" state={{ from: backLinkHref }}>\n              АКТОРИ\n            </Button>\n            <Button to=\"reviews\" state={{ from: backLinkHref }}>\n              ВІДГУКИ\n            </Button>\n          </ButtonWrapper>\n        </>\n      )}\n      <Suspense fallback={<Fallback>Будь ласка, зачекайте</Fallback>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\nexport default MovieDetails;","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"82d7358e08c3385257d89a8036361557\";\n\nconst popular = async () => {\n  const response = await axios.get(\"/trending/movie/week\", {\n    params: {\n      api_key: API_KEY,\n      language: \"uk\",\n    },\n  });\n  return response.data.results;\n};\n\nconst search = async (query) => {\n  const response = await axios.get(\"/search/movie\", {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  });\n  return response.data.results;\n};\n\nconst details = async (id) => {\n  const response = await axios.get(\"/movie/\" + id, {\n    params: {\n      api_key: API_KEY,\n      language: \"uk\",\n    },\n  });\n  return response.data;\n};\n\nconst cast = async (id) => {\n  const response = await axios.get(\"/movie/\" + id + \"/credits\", {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nconst reviews = async (id) => {\n  const response = await axios.get(\"/movie/\" + id + \"/reviews\", {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nconst API = {\n  popular,\n  search,\n  details,\n  cast,\n  reviews,\n};\n\nexport default API;\n"],"names":["MainWrapper","styled","ButtonWrapper","Title","SubTitle","Text","Button","Link","MovieDetails","movieId","useParams","backLinkHref","useLocation","state","from","useState","movie","setMovie","hadleFetchDetails","useCallback","API","response","useEffect","to","size","poster_path","src","alt","title","detailsplaceholder","release_date","slice","tagline","vote_average","Math","floor","overview","genres","map","genre","name","join","Suspense","fallback","axios","API_KEY","popular","params","api_key","language","data","results","search","query","details","id","cast","reviews"],"sourceRoot":""}